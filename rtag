#!/bin/sh
set -eu

. ./xparse/xparse.sh

_TB="$(printf "\t")"
_NL="$(printf "\nx")"
_NL="${_NL%x}"
_FS="$(printf "\034")"

IFS=

SEARCH_CACHE_FILE=""
SEARCH_INCLUDE_TAGS=""
SEARCH_EXCLUDE_TAGS=""

# Args: root dir
build_cache() {
    # {{{
    local ROOT_DIR="${1}"

    # Assumptions:
    # - filenames DON'T contain newlines
    # - tags DON'T contain tabs
    # - tags DON'T contain newlines
    #
    # I think the above assumptions are reasonable, but they can always be
    # escaped later if needed.

    local TAGS_FILE
    IFS=

    find "${ROOT_DIR}" -iname '*.tags' -size '+0' | \
        sed -e 's/\\/\\\\/g' \
            -e 's/\t/\\t/g' | \
        while read -r TAGS_FILE; do
            local FILE="${TAGS_FILE%.tags}"
            [ -e "${FILE}" ] || continue

            # Filename
            printf "%s\t" "${FILE}"

            # Tags separated with tabs
            cat "${TAGS_FILE}" | \
                sed -e '/^$/d' | \
                tr '\n' '\t' | \
                sed -e 's/\t$/\n/'
        done
} # }}}

do_build_cache() { build_cache "${1}"; }

do_search_set_cache_file() {
    local FILE="${1}"
    [ -e "${FILE}" ] || exit 1
    SEARCH_CACHE_FILE="${FILE}"
}

do_search_include_tag() {
    local TAG="${1}"
    SEARCH_INCLUDE_TAGS="${SEARCH_INCLUDE_TAGS}${TAG}${_FS}"
}

do_search_exclude_tag() {
    local TAG="${1}"
    SEARCH_EXCLUDE_TAGS="${SEARCH_EXCLUDE_TAGS}${TAG}${_FS}"
}

do_search_include_tags() {
    local TAG
    for TAG in "$@"; do
        do_search_include_tag "${TAG}"
    done
}

do_search_exclude_tags() {
    local TAG
    for TAG in "$@"; do
        do_search_exclude_tag "${TAG}"
    done
}

# Cache
xparse_add_option  "build_cache"  1  do_build_cache
xparse_add_option  "b"            1  do_build_cache

# Search
xparse_add_option  "cache_file"        1  do_search_set_cache_file
xparse_add_option  "c"                 1  do_search_set_cache_file
xparse_add_option  "include"           1  do_search_include_tag
xparse_add_option  "i"                 1  do_search_include_tag
xparse_add_option  "include_multiple" '*' do_search_include_tags
xparse_add_option  "im"               '*' do_search_include_tags
xparse_add_option  "exclude"           1  do_search_exclude_tag
xparse_add_option  "e"                 1  do_search_exclude_tag
xparse_add_option  "exclude_multiple" '*' do_search_exclude_tags
xparse_add_option  "em"               '*' do_search_exclude_tags

# File selection
xparse_add_option  "file"   1  do_select_file
xparse_add_option  "f"      1  do_select_file
xparse_add_option  "files" '*' do_select_files
xparse_add_option  "fm"    '*' do_select_files

# Add
xparse_add_option  "tag"   1  do_add_tag
xparse_add_option  "t"     1  do_add_tag
xparse_add_option  "tags" '*' do_add_tags
xparse_add_option  "tm"   '*' do_add_tags

# Remove
xparse_add_option  "del_tag"   1  do_remove_tag
xparse_add_option  "d"         1  do_remove_tag
xparse_add_option  "del_tags" '*' do_remove_tags
xparse_add_option  "dm"       '*' do_remove_tags

xparse_execute_args "$@"

do_search() {
    local CACHE="$(sed -e 's/$/\t/' <"${SEARCH_CACHE_FILE}")"

    local INC_TAG
    IFS="${_FS}"
    for INC_TAG in ${SEARCH_INCLUDE_TAGS}; do
        CACHE="$(printf "%s\n" "${CACHE}" | grep -F "${_TB}${INC_TAG}${_TB}")"
    done

    local EXC_TAG
    IFS="${_FS}"
    for EXC_TAG in ${SEARCH_EXCLUDE_TAGS}; do
        CACHE="$(printf "%s\n" "${CACHE}" | grep -Fv "${_TB}${EXC_TAG}${_TB}")"
    done

    printf "%s\n" "${CACHE}" | sed -e 's/\t$//'
}
